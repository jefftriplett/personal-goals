name: 'Weekly report'
on:
  schedule:
    - cron: "0 12 * * 0"

jobs:
  weekly-report:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout workspace
      uses: actions/checkout@master

    # Get date and store as environment variables
    - name: Get and store variables
      run: |
        echo ::set-env name=BRANCH_NAME::$(date +%F)
        echo ::set-env name=WEEK_OF::"Week of $(date '+%B %d, %Y')"

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Generate our weekly report
      run: |
        python tasks.py --overwrite

    # Push changes and set env variable for branch name
    - name: Commit and push notes scaffold to branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
        git config --global user.email $GITHUB_ACTOR@users.noreply.github.com
        git config --global user.name $GITHUB_ACTOR
        git checkout -b $BRANCH_NAME
        git add .
        git commit -m ":pencil: Updated weekly goals"
        git push --force --set-upstream "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" $BRANCH_NAME

    # Open pull request
    - name: Open pull request for weekly goals
      uses: actions/github-script@0.4.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const createPull = await github.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: process.env["WEEK_OF"],
            body: "Please update your weekly goals.",
            head: process.env["BRANCH_NAME"],
            base: "master",
          });
          github.issues.addAssignees({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: createPull.data.number,
            assignees: [
              "jefftriplett"
            ],
          });
